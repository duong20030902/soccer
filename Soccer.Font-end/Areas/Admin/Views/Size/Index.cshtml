@using Soccer.Font_end.ViewModels
@model List<SizeDto>

<div class="section-body mt-3">
    <div class="container-fluid">
        <!-- Header Section -->
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="mb-4">
                    <h4>Quản lý kích thước sản phẩm</h4>
                    <small>Quản lý các kích thước có sẵn cho sản phẩm. <a asp-action="Create">Thêm kích thước mới</a></small>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row clearfix row-deck">
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Tổng kích thước</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter">@Model.Count</h5>
                        <span class="font-12">Kích thước hiện có</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Kích thước nhỏ</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter text-info">@Model.Count(s => s.SizeName.Contains("S") || s.SizeName.Contains("XS"))</h5>
                        <span class="font-12">Size S, XS</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Kích thước vừa</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter text-success">@Model.Count(s => s.SizeName.Contains("M") && !s.SizeName.Contains("XL"))</h5>
                        <span class="font-12">Size M</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Kích thước lớn</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter text-warning">@Model.Count(s => s.SizeName.Contains("L") || s.SizeName.Contains("XL"))</h5>
                        <span class="font-12">Size L, XL, XXL</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Size Management -->
        <div class="row clearfix">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Danh sách kích thước</h3>
                        <div class="card-options">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fa fa-plus"></i> Thêm kích thước
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Alert Messages -->
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                @TempData["Success"]
                            </div>
                        }
                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                @TempData["Error"]
                            </div>
                        }

                        <!-- Search -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Tìm kiếm kích thước..." id="searchInput">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 text-right">
                                <button class="btn btn-outline-primary" id="enableSort">
                                    <i class="fa fa-sort"></i> Sắp xếp
                                </button>
                                <button class="btn btn-success d-none" id="saveSort">
                                    <i class="fa fa-save"></i> Lưu thứ tự
                                </button>
                                <button class="btn btn-secondary d-none" id="cancelSort">
                                    <i class="fa fa-times"></i> Hủy
                                </button>
                            </div>
                        </div>

                        @if (Model.Any())
                        {
                            <!-- Size Grid -->
                            <div class="row" id="sizeGrid">
                                @foreach (var size in Model.OrderBy(s => s.SizeOrder))
                                {
                                    <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6 size-item"
                                         data-name="@size.SizeName.ToLower()"
                                         data-id="@size.SizeID"
                                         data-order="@size.SizeOrder">
                                        <div class="card size-card">
                                            <div class="card-body text-center">
                                                <div class="size-icon mb-3">
                                                    @if (size.SizeName.Contains("XS"))
                                                    {
                                                        <i class="fa fa-compress-arrows-alt fa-2x text-info"></i>
                                                    }
                                                    else if (size.SizeName.Contains("S") && !size.SizeName.Contains("XL"))
                                                    {
                                                        <i class="fa fa-compress fa-2x text-primary"></i>
                                                    }
                                                    else if (size.SizeName.Contains("M"))
                                                    {
                                                        <i class="fa fa-expand-arrows-alt fa-2x text-success"></i>
                                                    }
                                                    else if (size.SizeName.Contains("L"))
                                                    {
                                                        <i class="fa fa-expand fa-2x text-warning"></i>
                                                    }
                                                    else if (size.SizeName.Contains("XL"))
                                                    {
                                                        <i class="fa fa-arrows-alt fa-2x text-danger"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fa fa-ruler fa-2x text-secondary"></i>
                                                    }
                                                </div>

                                                <h4 class="size-name mb-2">@size.SizeName</h4>
                                                <p class="text-muted small mb-3">
                                                    Thứ tự: @size.SizeOrder
                                                </p>

                                                <!-- Size Type Badge -->
                                                @if (size.SizeName.Contains("XS"))
                                                {
                                                    <span class="badge badge-info mb-3">Rất nhỏ</span>
                                                }
                                                else if (size.SizeName.Contains("S") && !size.SizeName.Contains("XL"))
                                                {
                                                    <span class="badge badge-primary mb-3">Nhỏ</span>
                                                }
                                                else if (size.SizeName.Contains("M"))
                                                {
                                                    <span class="badge badge-success mb-3">Vừa</span>
                                                }
                                                else if (size.SizeName.Contains("L") && !size.SizeName.Contains("XL"))
                                                {
                                                    <span class="badge badge-warning mb-3">Lớn</span>
                                                }
                                                else if (size.SizeName.Contains("XL"))
                                                {
                                                    <span class="badge badge-danger mb-3">Rất lớn</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-secondary mb-3">Tùy chỉnh</span>
                                                }

                                                <div class="btn-group w-100" role="group">
                                                    <a asp-action="Details" asp-route-id="@size.SizeID"
                                                       class="btn btn-sm btn-outline-info" title="Chi tiết">
                                                        <i class="fa fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@size.SizeID"
                                                       class="btn btn-sm btn-outline-warning" title="Chỉnh sửa">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-danger"
                                                            onclick="deleteSize(@size.SizeID, '@size.SizeName')" title="Xóa">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>

                                                <!-- Drag handle for sorting -->
                                                <div class="drag-handle d-none">
                                                    <i class="fa fa-grip-vertical"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="fa fa-ruler fa-5x text-muted mb-3"></i>
                                <h5 class="text-muted">Chưa có kích thước nào</h5>
                                <p class="text-muted">Hãy tạo kích thước đầu tiên cho sản phẩm</p>
                                <a asp-action="Create" class="btn btn-primary">
                                    <i class="fa fa-plus"></i> Tạo kích thước đầu tiên
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa kích thước</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <i class="fa fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                    <p>Bạn có chắc chắn muốn xóa kích thước <strong id="sizeNameToDelete"></strong>?</p>
                    <p class="text-danger">Hành động này không thể hoàn tác và có thể ảnh hưởng đến sản phẩm đang sử dụng kích thước này!</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    <button type="submit" class="btn btn-danger">
                        <i class="fa fa-trash"></i> Xóa kích thước
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<script>
    let sortable = null;

    function deleteSize(id, name) {
        document.getElementById('sizeNameToDelete').textContent = name;
        document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + id;
        $('#deleteModal').modal('show');
    }

    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const sizes = document.querySelectorAll('.size-item');

        sizes.forEach(size => {
            const name = size.dataset.name;
            if (name.includes(searchTerm)) {
                size.style.display = 'block';
            } else {
                size.style.display = 'none';
            }
        });
    });

    // Sorting functionality
    document.getElementById('enableSort').addEventListener('click', function() {
        enableSorting();
    });

    document.getElementById('saveSort').addEventListener('click', function() {
        saveSortOrder();
    });

    document.getElementById('cancelSort').addEventListener('click', function() {
        disableSorting();
    });

    function enableSorting() {
        const grid = document.getElementById('sizeGrid');

        // Show drag handles
        document.querySelectorAll('.drag-handle').forEach(handle => {
            handle.classList.remove('d-none');
        });

        // Enable sortable
        sortable = Sortable.create(grid, {
            animation: 150,
            handle: '.drag-handle',
            ghostClass: 'sortable-ghost'
        });

        // Toggle buttons
        document.getElementById('enableSort').classList.add('d-none');
        document.getElementById('saveSort').classList.remove('d-none');
        document.getElementById('cancelSort').classList.remove('d-none');

        // Add visual feedback
        grid.classList.add('sorting-mode');
    }

    function disableSorting() {
        if (sortable) {
            sortable.destroy();
            sortable = null;
        }

        // Hide drag handles
        document.querySelectorAll('.drag-handle').forEach(handle => {
            handle.classList.add('d-none');
        });

        // Toggle buttons
        document.getElementById('enableSort').classList.remove('d-none');
        document.getElementById('saveSort').classList.add('d-none');
        document.getElementById('cancelSort').classList.add('d-none');

        // Remove visual feedback
        document.getElementById('sizeGrid').classList.remove('sorting-mode');

        // Reload page to reset order
        location.reload();
    }

    function saveSortOrder() {
        const items = document.querySelectorAll('.size-item');
        const reorderData = [];

        items.forEach((item, index) => {
            reorderData.push({
                SizeID: parseInt(item.dataset.id),
                NewOrder: index + 1
            });
        });

        fetch('@Url.Action("ReorderSizes")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            body: JSON.stringify(reorderData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                disableSorting();
                location.reload();
            } else {
                alert('Lỗi khi lưu thứ tự: ' + data.message);
            }
        })
        .catch(error => {
            alert('Lỗi khi lưu thứ tự: ' + error);
        });
    }
</script>

<style>
    .size-card {
        transition: all 0.3s ease;
        border: 1px solid #e3e6f0;
        height: 100%;
        position: relative;
    }

        .size-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

    .size-icon {
        padding: 15px;
        background: #f8f9fc;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        margin: 0 auto;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .size-name {
        font-weight: bold;
        color: #5a5c69;
    }

    .size-item {
        margin-bottom: 20px;
    }

    .drag-handle {
        position: absolute;
        top: 5px;
        right: 5px;
        cursor: move;
        color: #6c757d;
        padding: 5px;
    }

    .sorting-mode .size-card {
        cursor: move;
    }

    .sortable-ghost {
        opacity: 0.4;
    }

    .sorting-mode {
        background: #f8f9fc;
        border-radius: 10px;
        padding: 10px;
    }

    @@media (max-width: 768px) {
        .size-card {
            margin-bottom: 1rem;
        }

        .btn-group {
            flex-direction: column;
        }

            .btn-group .btn {
                border-radius: 0.375rem !important;
                margin-bottom: 0.25rem;
            }
    }
</style>
