@using Soccer.Font_end.ViewModels
@model List<ProductDto>

<div class="section-body mt-3">
    <div class="container-fluid">
        <!-- Header Section -->
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="mb-4">
                    <h4>Quản lý sản phẩm</h4>
                    <small>Danh sách tất cả sản phẩm trong hệ thống. <a asp-action="Create">Thêm sản phẩm mới</a></small>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row clearfix row-deck">
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Tổng sản phẩm</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter">@Model.Count</h5>
                        <span class="font-12">Sản phẩm hiện có</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Hết hàng</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter text-danger">@Model.Count(p => p.StockQuantity == 0)</h5>
                        <span class="font-12">Cần nhập thêm</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Sắp hết</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter text-warning">@Model.Count(p => p.StockQuantity <= 10 && p.StockQuantity > 0)</h5>
                        <span class="font-12">Dưới 10 sản phẩm</span>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Tổng giá trị</h3>
                    </div>
                    <div class="card-body">
                        <h5 class="number mb-0 font-32 counter">@Model.Sum(p => p.SalePrice * p.StockQuantity).ToString("C")</h5>
                        <span class="font-12">Giá trị tồn kho</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Product List -->
        <div class="row clearfix">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Danh sách sản phẩm</h3>
                        <div class="card-options">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fa fa-plus"></i> Thêm sản phẩm
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Alert Messages -->
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                @TempData["Success"]
                            </div>
                        }
                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                @TempData["Error"]
                            </div>
                        }

                        <!-- Search and Filter -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Tìm kiếm sản phẩm..." id="searchInput">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <select class="form-control" id="categoryFilter">
                                    <option value="">Tất cả danh mục</option>
                                    @foreach (var category in Model.Select(p => p.CategoryName).Distinct())
                                    {
                                        <option value="@category">@category</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <!-- Product Grid -->
                        <div class="row" id="productGrid">
                            @foreach (var product in Model)
                            {
                                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 product-item"
                                     data-category="@product.CategoryName"
                                     data-name="@product.ProductName.ToLower()">
                                    <div class="card product-card">
                                        <div class="card-header p-2">
                                            @if (product.ImageUrls.Any())
                                            {
                                                <img src="@product.ImageUrls.First()" class="card-img-top" alt="@product.ProductName" style="height: 200px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                                    <i class="fa fa-image fa-3x text-muted"></i>
                                                </div>
                                            }
                                            <div class="card-options">
                                                @if (product.StockQuantity == 0)
                                                {
                                                    <span class="badge badge-danger">Hết hàng</span>
                                                }
                                                else if (product.StockQuantity <= 10)
                                                {
                                                    <span class="badge badge-warning">Sắp hết</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-success">Còn hàng</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <h6 class="card-title mb-1">@product.ProductName</h6>
                                            <p class="text-muted small mb-2">@product.CategoryName - @product.BrandName</p>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span class="font-weight-bold text-primary">@product.SalePrice.ToString("C")</span>
                                                <small class="text-muted">SL: @product.StockQuantity</small>
                                            </div>
                                            @if (product.Colors.Any())
                                            {
                                                <div class="mb-2">
                                                    <small class="text-muted">Màu: @string.Join(", ", product.Colors)</small>
                                                </div>
                                            }
                                            @if (product.Sizes.Any())
                                            {
                                                <div class="mb-2">
                                                    <small class="text-muted">Size: @string.Join(", ", product.Sizes)</small>
                                                </div>
                                            }
                                        </div>
                                        <div class="card-footer p-2">
                                            <div class="btn-group w-100" role="group">
                                                <a asp-action="Details" asp-route-id="@product.ProductID"
                                                   class="btn btn-sm btn-outline-info" title="Chi tiết">
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@product.ProductID"
                                                   class="btn btn-sm btn-outline-warning" title="Chỉnh sửa">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger"
                                                        onclick="deleteProduct(@product.ProductID, '@product.ProductName')" title="Xóa">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa sản phẩm <strong id="productNameToDelete"></strong>?</p>
                <p class="text-danger">Hành động này không thể hoàn tác!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteProduct(id, name) {
            document.getElementById('productNameToDelete').textContent = name;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + id;
            $('#deleteModal').modal('show');
        }

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            filterProducts();
        });

        document.getElementById('categoryFilter').addEventListener('change', function() {
            filterProducts();
        });

        function filterProducts() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value;
            const products = document.querySelectorAll('.product-item');

            products.forEach(product => {
                const name = product.dataset.name;
                const category = product.dataset.category;

                const matchesSearch = name.includes(searchTerm);
                const matchesCategory = !categoryFilter || category === categoryFilter;

                if (matchesSearch && matchesCategory) {
                    product.style.display = 'block';
                } else {
                    product.style.display = 'none';
                }
            });
        }
    </script>
}

<style>
    .product-card {
        transition: transform 0.2s;
        height: 100%;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .card-options {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 1;
    }

    .product-item {
        margin-bottom: 20px;
    }
</style>
