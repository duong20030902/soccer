@using Soccer.Font_end.ViewModels
@model FieldBookingViewModel
@{
    ViewData["Title"] = "Đặt sân bóng";
}

<style>
    /* Modern Booking Page Design - Matching Shop Color Scheme */
    .booking-hero {
        background: linear-gradient(135deg, #FF6B35 0%, #C1272D 100%);
        position: relative;
        padding: 80px 0;
        text-align: center;
        color: #FFFFFF;
        margin-bottom: 40px;
        overflow: hidden;
    }

        .booking-hero::before {
            content: '⚽';
            position: absolute;
            font-size: 15rem;
            opacity: 0.1;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
        }

        .booking-hero h1 {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            position: relative;
            z-index: 2;
        }

        .booking-hero p {
            font-size: 1.2rem;
            opacity: 0.95;
            max-width: 600px;
            margin: 0 auto;
            position: relative;
            z-index: 2;
        }

    .booking-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .booking-layout {
        display: grid;
        grid-template-columns: 350px 1fr;
        gap: 30px;
        margin-bottom: 40px;
    }

    /* Search & Filter Sidebar */
    .search-sidebar {
        background: #FFFFFF;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(255, 107, 53, 0.15);
        padding: 24px;
        height: fit-content;
        position: sticky;
        top: 20px;
        border: 2px solid #FF8C42;
    }

    .search-section {
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 2px solid #E0E0E0;
    }

        .search-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

    .search-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 8px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .search-title::before {
            content: '';
            width: 4px;
            height: 20px;
            background: linear-gradient(135deg, #FF6B35, #C1272D);
            border-radius: 2px;
        }

    .form-control, select {
        border: 2px solid #E0E0E0;
        border-radius: 8px;
        padding: 12px 16px;
        font-size: 14px;
        transition: all 0.3s ease;
        width: 100%;
        margin-bottom: 10px;
        background: #FFFFFF;
    }

        .form-control:focus, select:focus {
            border-color: #FF6B35;
            box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.15);
            outline: none;
        }

    .search-btn {
        background: linear-gradient(135deg, #FF6B35, #C1272D);
        color: #FFFFFF;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .search-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
            background: linear-gradient(135deg, #C1272D, #8B0000);
        }

    /* Available Fields Section */
    .fields-section {
        background: #FFFFFF;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(255, 107, 53, 0.1);
        padding: 30px;
        border: 2px solid #FF8C42;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 3px solid #FFD23F;
    }

        .section-header h2 {
            margin: 0;
            color: #2d3748;
            font-size: 1.5rem;
            font-weight: 700;
        }

    .fields-count {
        color: #718096;
        font-size: 14px;
        font-weight: 500;
    }

    /* Field Cards */
    .fields-grid {
        display: grid;
        gap: 20px;
        margin-bottom: 40px;
    }

    .field-card {
        background: #FFFFFF;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        transition: all 0.4s ease;
        border: 2px solid #E0E0E0;
        position: relative;
    }

        .field-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 15px 35px rgba(255, 107, 53, 0.2);
            border-color: #FF6B35;
        }

    .field-info {
        padding: 24px;
        display: grid;
        grid-template-columns: auto 1fr auto;
        gap: 20px;
        align-items: center;
    }

    .field-number {
        background: linear-gradient(135deg, #FF6B35, #C1272D);
        color: #FFFFFF;
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 1.2rem;
    }

    .field-details h3 {
        font-size: 1.2rem;
        font-weight: 700;
        color: #2D3748;
        margin: 0 0 8px 0;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .field-type {
        background: linear-gradient(135deg, #FFD23F, #FF8C42);
        color: #1A1A1A;
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 700;
        text-transform: uppercase;
    }

    .field-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 16px;
        margin-top: 8px;
        color: #718096;
        font-size: 14px;
    }

        .field-meta span {
            display: flex;
            align-items: center;
            gap: 4px;
        }

    .field-price {
        text-align: right;
    }

        .field-price .price {
            font-size: 1.4rem;
            font-weight: 900;
            background: linear-gradient(135deg, #C1272D, #FF6B35);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            display: block;
        }

        .field-price .duration {
            color: #718096;
            font-size: 12px;
            margin-top: 4px;
        }

    /* Action Buttons */
    .field-actions {
        display: flex;
        gap: 10px;
        margin-top: 12px;
    }

    .btn-book {
        background: linear-gradient(135deg, #FF6B35, #C1272D);
        color: #FFFFFF;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        text-align: center;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        flex: 1;
    }

        .btn-book:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
            color: #FFFFFF;
            text-decoration: none;
            background: linear-gradient(135deg, #C1272D, #8B0000);
        }

    .btn-unavailable {
        background: #E53E3E;
        color: #FFFFFF;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 700;
        cursor: not-allowed;
        text-align: center;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        flex: 1;
        opacity: 0.7;
    }

    /* Status Badges */
    .status-badge {
        position: absolute;
        top: 12px;
        right: 12px;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-available {
        background: linear-gradient(135deg, #48BB78, #38A169);
        color: #FFFFFF;
    }

    .status-unavailable {
        background: linear-gradient(135deg, #E53E3E, #C53030);
        color: #FFFFFF;
    }

    /* Pagination */
    .pagination-wrapper {
        display: flex;
        justify-content: center;
        margin-top: 40px;
    }

    .pagination {
        display: flex;
        gap: 8px;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .page-item {
        display: flex;
    }

    .page-link {
        padding: 12px 16px;
        border: 2px solid #E0E0E0;
        border-radius: 8px;
        text-decoration: none;
        color: #2D3748;
        font-weight: 600;
        transition: all 0.3s ease;
        background: #FFFFFF;
    }

        .page-link:hover, .page-item.active .page-link {
            background: linear-gradient(135deg, #FF6B35, #C1272D);
            color: #FFFFFF;
            border-color: transparent;
            transform: translateY(-2px);
        }

    .page-item.disabled .page-link {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* Show More Button */
    .show-more-wrapper {
        text-align: center;
        margin-top: 30px;
    }

    .btn-show-more {
        background: transparent;
        border: 2px solid #FF6B35;
        color: #FF6B35;
        padding: 12px 32px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .btn-show-more:hover {
            background: #FF6B35;
            color: #FFFFFF;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .booking-layout {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .search-sidebar {
            position: static;
        }

        .field-info {
            grid-template-columns: 1fr;
            gap: 15px;
            text-align: center;
        }

        .field-price {
            text-align: center;
        }

        .booking-hero {
            padding: 60px 0;
        }

            .booking-hero h1 {
                font-size: 2rem;
            }
    }

    /* Hidden class for show more functionality */
    .hidden {
        display: none;
    }

    .view-details-link {
        display: inline-block;
        margin-top: 4px;
        color: #007bff;
        text-decoration: underline;
    }
</style>
<style>
    .time-group {
        margin-bottom: 30px;
        border: 1px solid #E0E0E0;
        border-radius: 12px;
        padding: 20px;
        background: #FAFAFA;
    }

    .time-header {
        color: #FF6B35;
        font-weight: 700;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 2px solid #FFD23F;
    }

</style>
<style>
    .search-loading {
        display: none;
        color: #FF6B35;
        font-size: 14px;
        margin-top: 10px;
        text-align: center;
    }

    .search-results-info {
        background: #F7FAFC;
        border: 1px solid #E2E8F0;
        border-radius: 8px;
        padding: 12px 16px;
        margin-bottom: 20px;
        color: #4A5568;
        font-size: 14px;
    }

    .no-results {
        text-align: center;
        padding: 60px 20px;
        color: #718096;
    }

        .no-results h3 {
            color: #2D3748;
            margin-bottom: 16px;
        }

    .search-suggestions {
        margin-top: 20px;
        font-size: 14px;
    }

        .search-suggestions ul {
            list-style: none;
            padding: 0;
            margin: 10px 0;
        }

        .search-suggestions li {
            margin-bottom: 8px;
            color: #718096;
        }

            .search-suggestions li::before {
                content: "💡 ";
                margin-right: 8px;
            }

</style>
<!-- Hero Section -->
<div class="booking-hero" style="margin-top:6.5%">
    <div class="booking-container">
        <h1>Đặt sân bóng <span style="color: #ffd700;">dễ dàng & nhanh chóng</span></h1>
        <p>Tìm kiếm và đặt sân bóng phù hợp với nhu cầu của bạn. Chọn loại sân, ngày giờ, vị trí và các tiện ích đi kèm. Đặt sân chỉ với vài thao tác đơn giản!</p>
    </div>
</div>

<div class="booking-container">
    <div class="booking-layout">
        <!-- Search & Filter Sidebar -->
        <aside class="search-sidebar">
            <!-- Field Type Filter -->
            <div class="search-section">
                <div class="search-title">⚽ Loại sân</div>
                <select id="loaiSan" name="loaiSan" class="sort-dropdown">
                    <option value="">Sân 7 người</option>
                </select>
            </div>

            <!-- Date & Time Filter -->
            <form id="searchForm" method="get" action="@Url.Action("Index", "Book")">
                <div class="search-section">
                    <div class="search-title">📅 Thời gian</div>
                    <input type="date" id="date" name="date" class="form-control"
                           value="@Model.SelectedDate.ToString("yyyy-MM-dd")" min="@DateTime.Now.ToString("yyyy-MM-dd")">

                    <select id="timeslotId" name="timeslotId" class="sort-dropdown">
                        <option value="">Chọn khung giờ</option>
                        @foreach (var timeslot in Model.Timeslots)
                        {
                            @if (Model.SelectedTimeslotId == timeslot.TimeslotID)
                            {
                                <option value="@timeslot.TimeslotID" selected>
                                    @timeslot.TimeDisplay
                                </option>
                            }
                            else
                            {
                                <option value="@timeslot.TimeslotID">
                                    @timeslot.TimeDisplay
                                </option>
                            }
                        }
                    </select>
                </div>

                <div class="search-section">
                    <div class="search-title">📍 Tên sân</div>
                    <input type="text" id="fieldName" name="fieldName" class="form-control"
                           placeholder="Nhập tên sân cần tìm" value="@Model.SearchFieldName">
                </div>

                <button type="submit" class="search-btn">🔍 Tìm sân</button>
            </form>

            <!-- Why Choose Us -->
            <div class="search-section">
                <div class="search-title">⭐ Vì sao chọn chúng tôi?</div>
                <ul style="list-style: none; padding: 0; margin: 0; color: #718096; font-size: 14px; line-height: 1.6;">
                    <li style="margin-bottom: 8px;">✓ Hệ thống sân đa dạng</li>
                    <li style="margin-bottom: 8px;">✓ Kiểm tra tình trạng thời gian thực</li>
                    <li style="margin-bottom: 8px;">✓ Hỗ trợ khách hàng tận tình</li>
                    <li style="margin-bottom: 8px;">✓ Thanh toán an toàn</li>
                    <li style="margin-bottom: 8px;">✓ Đặt sân phút chót</li>
                    <li>✓ Ưu đãi thành viên thân thiết</li>
                </ul>
            </div>
        </aside>

        <!-- Available Fields Section -->
        <main class="fields-section">
            <div class="section-header">
                <div>
                    <h2>Sân khả dụng</h2>
                    <div class="fields-count">Hiển thị @Model.TotalCount sân khả dụng</div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }

            <!-- Fields Grid -->
            <div class="fields-grid" id="fieldsGrid">
                @if (Model.Fields.Any())
                {
                    @foreach (var timeGroup in Model.Fields.GroupBy(f => f.TimeDisplay))
                    {
                        <div class="time-group">
                            <h4 class="time-header">⏰ @timeGroup.Key</h4>
                            @foreach (var field in timeGroup)
                            {
                                <div class="field-card">
                                    <div class="status-badge @(field.IsAvailable ? "status-available" : "status-unavailable")">
                                        @(field.IsAvailable ? "Còn trống" : "Hết sân")
                                    </div>
                                    <div class="field-info">
                                        <div class="field-number">@field.FieldId</div>
                                        <div class="field-details">
                                            <h3>
                                                @field.FieldName
                                                <span class="field-type">Sân 7 người</span>
                                            </h3>
                                            <div class="field-meta">
                                                <span>📅 @field.Date.ToString("dd/MM/yyyy")</span>
                                                <span>⏰ @field.TimeDisplay</span>
                                                <span>📍 @field.Location</span>
                                            </div>
                                            <a href="@Url.Action("FieldDetails", "Book", new { id = field.FieldId })" class="view-details-link">Xem chi tiết</a>
                                            <div class="field-actions">
                                                @if (field.IsAvailable)
                                                {
                                                    <button class="btn-book" data-schedule-id="@field.ScheduleId">Đặt sân ngay</button>
                                                }
                                                else
                                                {
                                                    <button class="btn-unavailable">Hết sân</button>
                                                }
                                            </div>
                                        </div>
                                        <div class="field-price">
                                            <span class="price">@field.PriceDisplay</span>
                                            <span class="duration">/ 1 giờ</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="text-center" style="padding: 40px;">
                        <h3>Không có sân nào khả dụng</h3>
                        <p>Vui lòng thử tìm kiếm với ngày hoặc khung giờ khác.</p>
                    </div>
                }
            </div>
        </main>
    </div>
</div>

<style>
    /* Modal Styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        z-index: 1000;
        display: none;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(3px);
    }

    .modal-content {
        background: #FFFFFF;
        border-radius: 16px;
        max-width: 500px;
        width: 90%;
        padding: 30px;
        box-shadow: 0 8px 32px rgba(255, 107, 53, 0.3);
        border: 2px solid #FF8C42;
        position: relative;
        animation: slideIn 0.3s ease-out;
    }

    @@keyframes slideIn {
        from {
            transform: translateY(-50px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 2px solid #FFD23F;
        padding-bottom: 10px;
    }

        .modal-header h3 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 700;
            color: #2D3748;
        }

    .modal-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #718096;
        cursor: pointer;
        transition: color 0.3s ease;
    }

        .modal-close:hover {
            color: #FF6B35;
        }

    .modal-body {
        margin-bottom: 20px;
    }

    .modal-field-info {
        background: #FAFAFA;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid #E0E0E0;
    }

        .modal-field-info p {
            margin: 8px 0;
            color: #2D3748;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .modal-field-info p strong {
                color: #FF6B35;
            }

    .modal-form-group {
        margin-bottom: 15px;
    }

        .modal-form-group label {
            display: block;
            font-weight: 600;
            color: #2D3748;
            margin-bottom: 8px;
        }

        .modal-form-group input,
        .modal-form-group select,
        .modal-form-group textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #E0E0E0;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .modal-form-group textarea {
            resize: vertical;
            min-height: 80px;
            max-height: 150px;
        }

            .modal-form-group input:focus,
            .modal-form-group select:focus,
            .modal-form-group textarea:focus {
                border-color: #FF6B35;
                box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.15);
                outline: none;
            }

    .modal-footer {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }

    .modal-btn-confirm {
        background: linear-gradient(135deg, #FF6B35, #C1272D);
        color: #FFFFFF;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .modal-btn-confirm:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
            background: linear-gradient(135deg, #C1272D, #8B0000);
        }

    .modal-btn-cancel {
        background: transparent;
        border: 2px solid #FF6B35;
        color: #FF6B35;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .modal-btn-cancel:hover {
            background: #FF6B35;
            color: #FFFFFF;
            transform: translateY(-2px);
        }

    .modal-error {
        color: #E53E3E;
        font-size: 14px;
        margin-top: 10px;
        display: none;
    }

    .modal-loading {
        color: #FF6B35;
        font-size: 14px;
        margin-top: 10px;
        display: none;
    }
</style>

<!-- Modal HTML -->
<div class="modal-overlay" id="bookingModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Đặt sân bóng</h3>
            <button class="modal-close" onclick="closeModal()">✕</button>
        </div>
        <div class="modal-body">
            <div class="modal-field-info">
                <p><strong>Sân:</strong> <span id="modalFieldName"></span></p>
                <p><strong>Ngày:</strong> <span id="modalDate"></span></p>
                <p><strong>Khung giờ:</strong> <span id="modalTime"></span></p>
                <p><strong>Địa điểm:</strong> <span id="modalLocation"></span></p>
                <p><strong>Giá:</strong> <span id="modalPrice"></span></p>
            </div>
            <form id="bookingForm">
                <div class="modal-form-group">
                    <label for="customerName">Họ và tên</label>
                    <input type="text" id="customerName" name="customerName" placeholder="Nhập họ và tên" required>
                </div>
                <div class="modal-form-group">
                    <label for="phoneNumber">Số điện thoại</label>
                    <input type="tel" id="phoneNumber" name="phoneNumber" placeholder="Nhập số điện thoại" required>
                </div>
                <div class="modal-form-group">
                    <label for="notes">Ghi chú</label>
                    <textarea id="notes" name="notes" placeholder="Nhập yêu cầu thêm (nếu có)" maxlength="500"></textarea>
                </div>
                <input type="hidden" id="scheduleId" name="scheduleId">
            </form>
            <div class="modal-error" id="modalError"></div>
            <div class="modal-loading" id="modalLoading">Đang xử lý...</div>
        </div>
        <div class="modal-footer">
            <button class="modal-btn-cancel" onclick="closeModal()">Hủy</button>
            <button class="modal-btn-confirm" onclick="submitBooking()">Xác nhận đặt sân</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Debounce function to limit the rate of function execution
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        $(document).ready(function () {
            // Smooth hover effects for field cards
            $('.field-card').hover(
                function () {
                    $(this).find('.field-number').css('transform', 'scale(1.1)');
                },
                function () {
                    $(this).find('.field-number').css('transform', 'scale(1)');
                }
            );

            $('#searchForm').on('submit', function (e) {
                e.preventDefault();
                performSearch();
            });

            // Handle real-time search when typing
            $('#fieldName').on('input', debounce(function() {
                if ($(this).val().length >= 2 || $(this).val().length === 0) {
                    performSearch();
                }
            }, 500));

            // Handle timeslot change
            $('#timeslotId').on('change', function() {
                performSearch();
            });

            // Handle date change
            $('#date').on('change', function() {
                performSearch();
            });

            function performSearch() {
                var formData = {
                    date: $('#date').val(),
                    timeslotId: $('#timeslotId').val() || null,
                    fieldName: $('#fieldName').val() || null
                };

                // Show loading
                $('#fieldsGrid').html('<div class="text-center"><p>Đang tìm kiếm...</p></div>');

                $.get('@Url.Action("SearchFields", "Book")', formData)
                    .done(function (response) {
                        console.log('Search response:', response); // Debug log
                        if (response.success) {
                            updateFieldsGrid(response.data);
                            updateResultCount(response.data.length);
                        } else {
                            $('#fieldsGrid').html('<div class="alert alert-danger">' + response.message + '</div>');
                        }
                    })
                    .fail(function (xhr, status, error) {
                        console.error('Search failed:', error, xhr.responseText);
                        $('#fieldsGrid').html('<div class="alert alert-danger">Có lỗi xảy ra khi tìm kiếm</div>');
                    });
            }

            function updateResultCount(count) {
                $('.fields-count').text(`Hiển thị ${count} sân khả dụng`);
            }

            // Handle "Đặt sân ngay" button click with event delegation
            $(document).on('click', '.btn-book', function (e) {
                e.preventDefault();
                try {
                    console.log('Book button clicked');

                    var $card = $(this).closest('.field-card');
                    if (!$card.length) {
                        console.error('Field card not found');
                        return;
                    }

                    var scheduleId = $(this).data('schedule-id');
                    if (!scheduleId) {
                        console.error('Schedule ID is undefined');
                        return;
                    }

                    var fieldId = $card.find('.field-number').text().trim();
                    var fieldName = $card.find('.field-details h3').contents().filter(function () {
                        return this.nodeType === 3;
                    }).text().trim();
                    var date = $card.find('.field-meta span').eq(0).text().replace('📅 ', '').trim();
                    var time = $card.find('.field-meta span').eq(1).text().replace('⏰ ', '').trim();
                    var location = $card.find('.field-meta span').eq(2).text().replace('📍 ', '').trim();
                    var price = $card.find('.field-price .price').text().trim();

                    console.log('Booking data:', { scheduleId, fieldId, fieldName, date, time, location, price });

                    // Populate modal
                    $('#modalFieldName').text(fieldName || 'N/A');
                    $('#modalDate').text(date || 'N/A');
                    $('#modalTime').text(time || 'N/A');
                    $('#modalLocation').text(location || 'N/A');
                    $('#modalPrice').text(price || 'N/A');
                    $('#scheduleId').val(scheduleId);

                    // Show modal
                    var $modal = $('#bookingModal');
                    if ($modal.length) {
                        $modal.css('display', 'flex');
                        console.log('Modal should be visible');
                    } else {
                        console.error('Modal element not found');
                    }
                } catch (error) {
                    console.error('Error in btn-book click handler:', error);
                }
            });

            // Close modal
            window.closeModal = function () {
                $('#bookingModal').css('display', 'none');
                $('#bookingForm')[0].reset();
                $('#modalError').hide();
                $('#modalLoading').hide();
            };

            // Submit booking to Google Sheet
            window.submitBooking = function () {
                const formData = {
                    fieldName: document.getElementById('modalFieldName').textContent,
                    time: document.getElementById('modalTime').textContent,
                    customerName: document.getElementById('customerName').value,
                    phoneNumber: document.getElementById('phoneNumber').value,
                    notes: document.getElementById('notes').value
                };

                console.log('Submitting booking:', formData);

                // Basic validation
                if (!formData.customerName || !formData.phoneNumber) {
                    document.getElementById('modalError').textContent = 'Vui lòng điền đầy đủ thông tin.';
                    document.getElementById('modalError').style.display = 'block';
                    return;
                }

                // Phone number validation (Vietnamese phone numbers)
                const phoneRegex = /^(0|\+84)(3|5|7|8|9)[0-9]{8}$/;
                if (!phoneRegex.test(formData.phoneNumber)) {
                    document.getElementById('modalError').textContent = 'Số điện thoại không hợp lệ.';
                    document.getElementById('modalError').style.display = 'block';
                    return;
                }

                document.getElementById('modalLoading').style.display = 'block';
                document.getElementById('modalError').style.display = 'none';

                // Send data to Google Apps Script
                fetch('https://script.google.com/macros/s/AKfycbzCUJk0z8pty1wQbez-9ySGLoACqx66pSXxSu9p1rLlnZ4cVZ-gSGlZyccqY-XiSkg7/exec', {
                    method: 'POST',
                    mode: 'no-cors',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: new URLSearchParams(formData).toString()
                })
                .then(() => {
                    document.getElementById('modalLoading').style.display = 'none';
                    alert('Đặt sân thành công! Thông tin đã được gửi. Vui lòng để ý điện thoại để nhận cuộc gọi xác nhận từ chúng tôi nhé!');
                    closeModal();
                    $('#searchForm').submit(); // Refresh fields grid
                })
                .catch(error => {
                    document.getElementById('modalLoading').style.display = 'none';
                    console.error('Booking failed:', error);
                    document.getElementById('modalError').textContent = 'Có lỗi xảy ra khi gửi dữ liệu. Vui lòng thử lại.';
                    document.getElementById('modalError').style.display = 'block';
                });
            };

            // Cải thiện updateFieldsGrid function
            function updateFieldsGrid(fields) {
                console.log('Fields data:', fields); // Debug log
                var html = '';
                if (fields && fields.length > 0) {
                    var groupedFields = fields.reduce((acc, field) => {
                        (acc[field.timeDisplay] = acc[field.timeDisplay] || []).push(field);
                        return acc;
                    }, {});

                    Object.keys(groupedFields).forEach(timeDisplay => {
                        html += `<div class="time-group"><h4 class="time-header">⏰ ${timeDisplay}</h4>`;
                        groupedFields[timeDisplay].forEach(field => {
                            console.log('Field:', field); // Debug each field
                            var statusClass = field.isAvailable ? 'status-available' : 'status-unavailable';
                            var statusText = field.isAvailable ? 'Còn trống' : 'Hết sân';
                            var actionButton = field.isAvailable
                                ? `<button class="btn-book" data-schedule-id="${field.scheduleId || ''}">Đặt sân ngay</button>`
                                : '<button class="btn-unavailable">Hết sân</button>';

                            html += `
                                <div class="field-card">
                                    <div class="status-badge ${statusClass}">${statusText}</div>
                                    <div class="field-info">
                                        <div class="field-number">${field.fieldId || 'N/A'}</div>
                                        <div class="field-details">
                                            <h3>
                                                ${field.fieldName || 'N/A'}
                                                <span class="field-type">Sân 7 người</span>
                                            </h3>
                                            <div class="field-meta">
                                                <span>📅 ${formatDate(field.date) || 'N/A'}</span>
                                                <span>⏰ ${field.timeDisplay || 'N/A'}</span>
                                                <span>📍 ${field.location || 'N/A'}</span>
                                            </div>
                                            <a href="/Book/FieldDetails/${field.fieldId || ''}" class="view-details-link">Xem chi tiết</a>
                                            <div class="field-actions">
                                                ${actionButton}
                                            </div>
                                        </div>
                                        <div class="field-price">
                                            <span class="price">${field.priceDisplay || 'N/A'}</span>
                                            <span class="duration">/ 1 giờ</span>
                                        </div>
                                    </div>
                                </div>`;
                        });
                        html += '</div>';
                    });
                } else {
                    html = `
                        <div class="text-center" style="padding: 40px;">
                            <h3>Không có sân nào khả dụng</h3>
                            <p>Vui lòng thử tìm kiếm với ngày hoặc khung giờ khác.</p>
                        </div>`;
                }
                $('#fieldsGrid').html(html);
            }

            function formatDate(dateString) {
                var date = new Date(dateString);
                return date.toLocaleDateString('vi-VN');
            }
        });
    </script>
}
