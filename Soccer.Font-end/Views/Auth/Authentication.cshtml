@model Soccer.Font_end.ViewModels.AuthViewModel
@{
    ViewData["Title"] = "Đăng nhập & Đăng ký";
}

<style>
    .auth-container {
        max-width: 500px;
        margin: 40px auto;
        padding: 30px;
        background: rgba(0, 0, 0, 0.7);
        border-radius: 5px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        color: white;
        position: relative;
    }

        .auth-container h2 {
            text-align: center;
            color: #e81e25;
            margin-bottom: 30px;
            font-family: 'Oswald', sans-serif;
            text-transform: uppercase;
        }

    .auth-tabs {
        display: flex;
        justify-content: center;
        margin-bottom: 30px;
    }

    .auth-tab {
        padding: 10px 25px;
        cursor: pointer;
        background: transparent;
        color: white;
        font-weight: bold;
        border: none;
        font-family: 'Oswald', sans-serif;
        text-transform: uppercase;
        font-size: 16px;
        transition: all 0.3s ease;
    }

        .auth-tab.active {
            color: #e81e25;
            border-bottom: 3px solid #e81e25;
        }

    .auth-form {
        display: none;
    }

        .auth-form.active {
            display: block;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #ddd;
            font-family: 'Oswald', sans-serif;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border-radius: 3px;
            font-size: 16px;
        }

            .form-group input:focus {
                outline: none;
                border-color: #e81e25;
            }

    .btn-submit {
        background: #e81e25;
        color: white;
        border: none;
        padding: 12px 30px;
        border-radius: 3px;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        text-transform: uppercase;
        font-family: 'Oswald', sans-serif;
        width: 100%;
        margin-top: 20px;
        transition: all 0.3s ease;
    }

        .btn-submit:hover {
            background: #c61017;
        }

    .auth-footer {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        color: #aaa;
    }

        .auth-footer a {
            color: #e81e25;
            text-decoration: none;
        }

    .banner-auth {
        background: url('/images/banner/background01.jpg') center/cover no-repeat;
        position: relative;
        padding: 80px 0;
    }

        .banner-auth::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
        }

    .banner-auth-content {
        position: relative;
        z-index: 1;
        text-align: center;
        color: white;
    }

        .banner-auth-content h1 {
            font-size: 48px;
            font-weight: bold;
            color: white;
            text-transform: uppercase;
            margin-bottom: 20px;
            font-family: 'Oswald', sans-serif;
        }

            .banner-auth-content h1 span {
                color: #e81e25;
            }

    .social-login {
        margin-top: 30px;
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    .social-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 20px;
        border-radius: 3px;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 45%;
    }

        .social-btn.facebook {
            background: #3b5998;
        }

        .social-btn.google {
            background: #dd4b39;
        }

        .social-btn i {
            margin-right: 10px;
            font-size: 18px;
        }

    .checkbox-group {
        display: flex;
        align-items: center;
        margin-top: 15px;
    }

        .checkbox-group input {
            margin-right: 10px;
            width: auto;
        }

    .form-divider {
        margin: 25px 0;
        text-align: center;
        position: relative;
    }

        .form-divider::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 0;
            width: 42%;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
        }

        .form-divider::after {
            content: "";
            position: absolute;
            top: 50%;
            right: 0;
            width: 42%;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
        }

        .form-divider span {
            background: rgba(0, 0, 0, 0.7);
            position: relative;
            z-index: 1;
            padding: 0 10px;
            color: #aaa;
        }

    /* Soccer ball animation */
    .soccer-ball {
        position: absolute;
        width: 40px;
        height: 40px;
        background: url('/images/banner/ball.png') no-repeat;
        background-size: contain;
        animation: bounce 6s infinite;
        opacity: 0.8;
        z-index: 0;
    }

    @@keyframes bounce {
        0%, 100%

    {
        transform: translateY(0) rotate(0deg);
    }

    50% {
        transform: translateY(-80px) rotate(180deg);
    }

    }

    .soccer-ball:nth-child(1) {
        top: 20px;
        left: 10%;
        animation-delay: 0s;
    }

    .soccer-ball:nth-child(2) {
        top: 40px;
        right: 15%;
        animation-delay: 1s;
    }

    .validation-message {
        color: #ff6b6b;
        font-size: 12px;
        margin-top: 5px;
    }
</style>

<!-- Banner Section -->
<div class="banner-auth" style="margin-top: 100px;">
    <div class="container">
        <div class="banner-auth-content">
            <h1>Tham gia <span>với</span> chúng tôi</h1>
            <p>Đăng ký tài khoản để nhận thông tin về các trận đấu, mua sắm sản phẩm và đặt sân bóng!</p>
        </div>
    </div>
</div>

<!-- Auth Section -->
<section class="auth-section bg-white">
    <div class="container">
        <div class="row">
            <div class="auth-container">
                <div class="soccer-ball"></div>
                <div class="soccer-ball"></div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }

                <div class="auth-tabs">
                    <button class="auth-tab @(ViewData["ActiveTab"]?.ToString() == "register" ? "" : "active")" onclick="showTab('login', event)">Đăng nhập</button>
                    <button class="auth-tab @(ViewData["ActiveTab"]?.ToString() == "register" ? "active" : "")" onclick="showTab('register', event)">Đăng ký</button>
                </div>
                @if (ViewData["RegisterError"] != null)
                {
                    <div class="alert alert-danger">@ViewData["RegisterError"]</div>
                }
                @if (ViewData["LoginError"] != null)
                {
                    <div class="alert alert-danger">@ViewData["LoginError"]</div>
                }
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                }
                <!-- Login Form -->
                <form asp-action="Login" asp-controller="Auth" method="post" class="auth-form @(ViewData["ActiveTab"]?.ToString() == "register" ? "" : "active")" id="login-form" data-prefix="Login">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @if (!string.IsNullOrEmpty(ViewData["LoginError"]?.ToString()))
                    {
                        <div class="validation-message">@ViewData["LoginError"]</div>
                    }

                    <div class="form-group">
                        <label asp-for="Login.Email">Email</label>
                        <input asp-for="Login.Email" name="Email" type="email" placeholder="Nhập email của bạn" required>
                        <span asp-validation-for="Login.Email" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Login.Password">Mật khẩu</label>
                        <input asp-for="Login.Password" name="Password" type="password" placeholder="Nhập mật khẩu của bạn" required>
                        <span asp-validation-for="Login.Password" class="validation-message"></span>
                    </div>

                    <div class="checkbox-group">
                        <input asp-for="Login.RememberMe" type="checkbox">
                        <label asp-for="Login.RememberMe">Ghi nhớ đăng nhập</label>
                    </div>

                    <button type="submit" class="btn-submit">Đăng nhập</button>

                    <div class="auth-footer">
                        <a asp-action="Index" asp-controller="ForgotPW" class="forgot-password">Quên mật khẩu?</a>
                    </div>

                    <div class="form-divider">
                        <span>Hoặc</span>
                    </div>

                    <div class="social-login">
                        <div class="social-btn facebook">
                            <i class="fa fa-facebook"></i> Facebook
                        </div>
                        <div class="social-btn google">
                            <i class="fa fa-google"></i> Google
                        </div>
                    </div>
                </form>

                <!-- Register Form -->
                <form asp-action="Register" asp-controller="Auth" method="post" class="auth-form @(ViewData["ActiveTab"]?.ToString() == "register" ? "active" : "")" id="register-form" data-prefix="Register">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @if (!string.IsNullOrEmpty(ViewData["RegisterError"]?.ToString()))
                    {
                        <div class="validation-message">@ViewData["RegisterError"]</div>
                    }

                    <div class="form-group">
                        <label asp-for="Register.FullName">Họ tên</label>
                        <input asp-for="Register.FullName" name="FullName" type="text" placeholder="Nhập họ tên của bạn" required>
                        <span asp-validation-for="Register.FullName" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Register.RegisterEmail">Email</label>
                        <input asp-for="Register.RegisterEmail" name="RegisterEmail" type="email" placeholder="Nhập email của bạn" required>
                        <span asp-validation-for="Register.RegisterEmail" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Register.PhoneNumber">Số điện thoại</label>
                        <input asp-for="Register.PhoneNumber" name="PhoneNumber" type="tel" placeholder="Nhập số điện thoại của bạn" required>
                        <span asp-validation-for="Register.PhoneNumber" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Register.RegisterPassword">Mật khẩu</label>
                        <input asp-for="Register.RegisterPassword" name="RegisterPassword" type="password" placeholder="Tạo mật khẩu" required>
                        <span asp-validation-for="Register.RegisterPassword" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Register.ConfirmPassword">Xác nhận mật khẩu</label>
                        <input asp-for="Register.ConfirmPassword" name="ConfirmPassword" type="password" placeholder="Xác nhận mật khẩu" required>
                        <span asp-validation-for="Register.ConfirmPassword" class="validation-message"></span>
                    </div>

                    <div class="checkbox-group">
                        <input asp-for="Register.AgreeTerms" name="AgreeTerms" type="checkbox" required>
                        <label asp-for="Register.AgreeTerms">Tôi đồng ý với <a href="#">Điều khoản sử dụng</a> và <a href="#">Chính sách bảo mật</a></label>
                        <span asp-validation-for="Register.AgreeTerms" class="validation-message"></span>
                    </div>

                    <button type="submit" class="btn-submit">Đăng ký</button>

                    <div class="form-divider">
                        <span>Hoặc</span>
                    </div>

                    <div class="social-login">
                        <div class="social-btn facebook">
                            <i class="fa fa-facebook"></i> Facebook
                        </div>
                        <div class="social-btn google">
                            <i class="fa fa-google"></i> Google
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        function showTab(tabName, event) {
            if (event) {
                event.preventDefault();
            }

            // Hide all forms
            document.querySelectorAll('.auth-form').forEach(form => {
                form.classList.remove('active');
            });

            // Deactivate all tabs
            document.querySelectorAll('.auth-tab').forEach(tab => {
                tab.classList.remove('active');
            });

            // Show the selected form
            document.getElementById(tabName + '-form').classList.add('active');

            // Activate the clicked tab
            if (event) {
                event.currentTarget.classList.add('active');
            }
        }

        // Show appropriate tab based on validation errors
        document.addEventListener('DOMContentLoaded', function() {
            // Check if there are validation errors in either form
            var loginErrors = @(ViewData["ActiveTab"]?.ToString() == "login" ? "true" : "false");
            var registerErrors = @(ViewData["ActiveTab"]?.ToString() == "register" ? "true" : "false");

            if (registerErrors) {
                showTab('register');
            } else {
                showTab('login');
            }
        });

                // Log mọi submit form
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(e) {
                const formData = new FormData(this);
                console.log(`Submitting ${this.dataset.prefix} form with data:`, Object.fromEntries(formData));
            });
        });

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}