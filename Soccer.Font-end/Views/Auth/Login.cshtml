@{
    ViewData["Title"] = "Đăng nhập";
}

<style>
    .auth-container {
        max-width: 500px;
        margin: 40px auto;
        padding: 30px;
        background: rgba(0, 0, 0, 0.7);
        border-radius: 5px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        color: white;
        position: relative;
    }

        .auth-container h2 {
            text-align: center;
            color: #e81e25;
            margin-bottom: 30px;
            font-family: 'Oswald', sans-serif;
            text-transform: uppercase;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #ddd;
            font-family: 'Oswald', sans-serif;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border-radius: 3px;
            font-size: 16px;
        }

            .form-group input:focus {
                outline: none;
                border-color: #e81e25;
            }

    .btn-submit {
        background: #e81e25;
        color: white;
        border: none;
        padding: 12px 30px;
        border-radius: 3px;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        text-transform: uppercase;
        font-family: 'Oswald', sans-serif;
        width: 100%;
        margin-top: 20px;
        transition: all 0.3s ease;
    }

        .btn-submit:hover {
            background: #c61017;
        }

    .auth-footer {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        color: #aaa;
    }

        .auth-footer a {
            color: #e81e25;
            text-decoration: none;
        }

    .banner-auth {
        background: url('/images/banner/background01.jpg') center/cover no-repeat;
        position: relative;
        padding: 80px 0;
    }

        .banner-auth::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
        }

    .banner-auth-content {
        position: relative;
        z-index: 1;
        text-align: center;
        color: white;
    }

        .banner-auth-content h1 {
            font-size: 48px;
            font-weight: bold;
            color: white;
            text-transform: uppercase;
            margin-bottom: 20px;
            font-family: 'Oswald', sans-serif;
        }

            .banner-auth-content h1 span {
                color: #e81e25;
            }

    .social-login {
        margin-top: 30px;
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    .social-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 20px;
        border-radius: 3px;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 45%;
    }

        .social-btn.facebook {
            background: #3b5998;
        }

        .social-btn.google {
            background: #dd4b39;
        }

        .social-btn i {
            margin-right: 10px;
            font-size: 18px;
        }

    .checkbox-group {
        display: flex;
        align-items: center;
        margin-top: 15px;
    }

        .checkbox-group input {
            margin-right: 10px;
            width: auto;
        }

    .form-divider {
        margin: 25px 0;
        text-align: center;
        position: relative;
    }

        .form-divider::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 0;
            width: 42%;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
        }

        .form-divider::after {
            content: "";
            position: absolute;
            top: 50%;
            right: 0;
            width: 42%;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
        }

        .form-divider span {
            background: rgba(0, 0, 0, 0.7);
            position: relative;
            z-index: 1;
            padding: 0 10px;
            color: #aaa;
        }

    .validation-message {
        color: #ff6b6b;
        font-size: 12px;
        margin-top: 5px;
        display: none;
    }

        .validation-message.active {
            display: block;
        }
</style>

<style>
    .alert {
        margin: 20px auto;
        max-width: 500px;
        border-radius: 5px;
        padding: 15px;
        display: flex !important;
        align-items: center;
        gap: 10px;
        position: relative;
        z-index: 1000;
    }

    .alert-success {
        background-color: #d4edda !important;
        border: 1px solid #c3e6cb;
        color: #155724 !important;
    }

    .alert-danger {
        background-color: #f8d7da !important;
        border: 1px solid #f5c6cb;
        color: #721c24 !important;
    }

    .btn-close {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        margin-left: auto;
        color: inherit;
    }

        .btn-close:hover {
            opacity: 0.7;
        }
</style>

@{
    var successMsg = ViewData["SuccessMessage"]?.ToString();
    var errorMsg = ViewData["ErrorMessage"]?.ToString();
    var loginError = ViewData["LoginError"]?.ToString();
}
@if (!string.IsNullOrEmpty(successMsg))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="display: block !important;">
        <i class="fa fa-check-circle"></i> @successMsg
        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (!string.IsNullOrEmpty(errorMsg))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="display: block !important;">
        <i class="fa fa-exclamation-triangle"></i> @errorMsg
        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (!string.IsNullOrEmpty(loginError))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="display: block !important;">
        <i class="fa fa-exclamation-triangle"></i> @loginError
        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="display: block !important;">
        <i class="fa fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

<!-- Banner Section -->
<div class="banner-auth" style="margin-top: 100px;">
    <div class="container">
        <div class="banner-auth-content">
            <h1>Đăng <span>nhập</span></h1>
            <p>Đăng nhập để trải nghiệm đầy đủ các tính năng của chúng tôi!</p>
        </div>
    </div>
</div>

<!-- Login Section -->
<section class="auth-section bg-white">
    <div class="container">
        <div class="row">
            <div class="auth-container">
                <h2>Đăng nhập</h2>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }

                @if (ViewData["LoginError"] != null)
                {
                    <div class="alert alert-danger">@ViewData["LoginError"]</div>
                }

                <form id="loginForm">
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" name="email" placeholder="Nhập email của bạn" required>
                        <span id="email-validation" class="validation-message"></span>
                    </div>

                    <div class="form-group">
                        <label for="password">Mật khẩu</label>
                        <input type="password" id="password" name="password" placeholder="Nhập mật khẩu của bạn" required>
                        <span id="password-validation" class="validation-message"></span>
                    </div>

                    <div class="checkbox-group">
                        <input type="checkbox" id="rememberMe" name="rememberMe">
                        <label for="rememberMe">Ghi nhớ đăng nhập</label>
                    </div>

                    <button type="submit" class="btn-submit">Đăng nhập</button>

                    <div class="auth-footer">
                        <a href="/ForgotPW/Index" class="forgot-password">Quên mật khẩu?</a>
                        <br><br>
                        <span>Chưa có tài khoản? <a href="/Auth/Register">Đăng ký ngay</a></span>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>

    <script>
        document.getElementById("loginForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            // Lấy dữ liệu từ form
            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;
            const rememberMe = document.getElementById("rememberMe").checked;

            // Xóa thông báo lỗi cũ
            document.getElementById("email-validation").textContent = "";
            document.getElementById("password-validation").textContent = "";
            document.getElementById("email-validation").classList.remove("active");
            document.getElementById("password-validation").classList.remove("active");

            // Kiểm tra mật khẩu
            if (!password) {
                document.getElementById("password-validation").textContent = "Vui lòng nhập mật khẩu";
                document.getElementById("password-validation").classList.add("active");
                return;
            }

            try {
                // Gọi API Login
                const response = await fetch('https://api.soccer.soccertips.org/api/Auth/login', {
                    method: 'POST',
                    credentials: 'include', // Gửi cookie session
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        Email: email,
                        Password: password,
                        RememberMe: rememberMe
                    })
                });

                if (!response.ok) {
                    const error = await response.json();
                    const errorMessage = error.message || "Đăng nhập thất bại. Vui lòng kiểm tra lại thông tin.";
                    const alertDiv = document.createElement("div");
                    alertDiv.className = "alert alert-danger alert-dismissible fade show";
                    alertDiv.style.display = "block";
                    alertDiv.innerHTML = `
                        <i class="fa fa-exclamation-triangle"></i> ${errorMessage}
                        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
                    `;
                    document.querySelector(".auth-container").prepend(alertDiv);
                    return;
                }

                const result = await response.json();
                if (result && result.token) {
                    // Token đã được lưu trong session ở back-end, không lưu ở front-end
                    // Chuyển hướng đến trang chủ
                    window.location.href = "/Home/Index";
                } else {
                    const alertDiv = document.createElement("div");
                    alertDiv.className = "alert alert-danger alert-dismissible fade show";
                    alertDiv.style.display = "block";
                    alertDiv.innerHTML = `
                        <i class="fa fa-exclamation-triangle"></i> Đăng nhập thất bại. Vui lòng thử lại.
                        <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
                    `;
                    document.querySelector(".auth-container").prepend(alertDiv);
                }
            } catch (error) {
                console.error('Error during login:', error);
                const alertDiv = document.createElement("div");
                alertDiv.className = "alert alert-danger alert-dismissible fade show";
                alertDiv.style.display = "block";
                alertDiv.innerHTML = `
                    <i class="fa fa-exclamation-triangle"></i> Lỗi kết nối. Vui lòng thử lại sau.
                    <button type="button" class="btn-close" onclick="this.parentElement.style.display='none'">×</button>
                `;
                document.querySelector(".auth-container").prepend(alertDiv);
            }
        });

        // Kiểm tra session khi tải trang
        window.addEventListener('load', async () => {
            try {
                const response = await fetch('https://api.soccer.soccertips.org/api/Auth/get-token', {
                    method: 'GET',
                    credentials: 'include' // Gửi cookie session
                });

                if (response.ok) {
                    const data = await response.json();
                    if (data.token) {
                        window.location.href = "/Home/Index"; // Chuyển hướng nếu session còn hợp lệ
                    }
                } else {
                    console.error('No valid session found');
                }
            } catch (error) {
                console.error('Error checking session:', error);
            }
        });
    </script>
}